(()=>{var e={};e.id=772,e.ids=[772],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5826:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>l,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{GET:()=>u});var a=r(6559),o=r(8088),n=r(7719),i=r(2190);let p=process.env.BACKEND_URL||"http://localhost:8000";async function u(e){try{let t=await fetch(`${p}/api/health`,{method:"GET",headers:{Authorization:e.headers.get("Authorization")||"","Content-Type":"application/json"}});if(!t.ok)return i.NextResponse.json({error:"Backend health check failed"},{status:t.status});let r=await t.json();return i.NextResponse.json(r)}catch(e){return console.error("Health check error:",e),i.NextResponse.json({error:"Failed to connect to backend"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/app/frontend/app/api/health/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:h,serverHooks:l}=c;function x(){return(0,n.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:h})}},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(5826));module.exports=s})();